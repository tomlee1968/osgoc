#!/bin/bash
#
# Released under DWTFYWTPL
# (Do What The F*ck You Want To Public License)
#
#
# Munin plugin to read IPMI sensor data
#
# Usage: put the attached ipmiget or hpasmcliget into a desired place, then 
# put it into your crontab, and make sure that /tmp is writable.
#
#        Symlink this script into your /etc/munin/plugins directory in the
#        following way:
#
#	 ipmisens2_[machine]_[sensors]
#	 Supported machines:
#	 - Sun X4100/4200: x4x00 (temp, volt, fan)
#	 - Sun V20z (V40z?): v20z (temp, volt, fan)
#	 - IBM X346: x346 (temp, volt, fan)
#	 - Sun X2100: x2100 (temp, volt, fan)
#	 - HP DL385: dl385 (temp, fan)
#	 - Asus K8N-LR + ASMB2 IPMI board: asmb2 (temp, volt, fan)
#	 - HP DL385G2: dl385g2 (temp, fan)
#	 - Intel SHG2 mainboard: shg2 (temp, volt, fan)
#
#
# Supported machines (Output submitted by):
#   - Sun V20z (Zoltan LAJBER <lajbi@lajli.gau.hu>)
#   - IBM X346 (Gergely MADARASZ <gorgo@broadband.hu>)
#   - Sun X4100 (Zoltan HERPAI <wigyori@uid0.hu>)
#   - Sun X2100 (Zoltan HERPAI <wigyori@uid0.hu>)
#   - HP DL385 (Zoltan HERPAI <wigyori@uid0.hu>)
#   - Asus K8N-LR + ASMB2 IPMI board (Louis van Belle <louis@van-belle.nl>)
#   - HP DL385G2 (Zoltan HERPAI <wigyori@uid0.hu>)
#   - Intel SHG2 mainboard (Andras GOT <andrej@antiszoc.hu>)
#
# Revision 1.0  2006/05/13 Zoltan HERPAI <wigyori@uid0.hu>
#               * Original script was done by Richard van den Berg
#               * Initial fork from Zoltan LAJBER's V20z monitorint script
#               * Added support for IBM X346, done by Gergely MADARASZ
#               * Added support for Sun X4100
#
# Revision 2.0  2006/09/28 Zoltan HERPAI <wigyori@uid0.hu>
#		* Complete rewrite in shellscript, same machines supported,
#		  thanks for the ipmitool outputs
#
# Revision 2.01	2006/09/29 Zoltan HERPAI <wigyori@uid0.hu>
#		* Added support for Sun X2100
#
# Revision 2.02	2006/10/03 Zoltan HERPAI <wigyori@uid0.hu>
#		* Added support for HP DL385
#		  Modify hpasmcliget to invoke hpasmcli from the correct
#		  location
#
# Revision 2.03 2007/01/02 Zoltan HERPAI <wigyori@uid0.hu>
#		* Added support for Asus K8N-LR + ASMB2 IPMI board
#		  Thanks to Louis van Belle for the patch and the output
#
# Revision 2.04	2007/01/20 Zoltan HERPAI <wigyori@uid0.hu>
#		* Added support for HP DL385G2
#		  Use the same hpasmcliget script for reading sensors
#		* Added support for Intel SHG2 mainboard
#		  Thanks to Andras GOT for the output
#



machine=`echo $0 |cut -d \_ -f 2`
sensors=`echo $0 |cut -d \_ -f 3`
ipmioutput='/tmp/ipmi-sensors'

# config print

if [ "$1" == "autoconf" ]; then
	echo "yes"
	exit 0
fi

if [ "$1" == "config" ]; then
	if [ "$machine" == "x4x00" ]; then
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			grep degrees $ipmioutput |
			while read a; do
				label=`echo $a |grep degree |cut -d \. -f 1`
				if [ "$label" == "mb" ]; then name='mainboard'; fi
				if [ "$label" == "fp" ]; then name="FP"; fi
				if [ "$label" == "pdb" ]; then name="PSU"; fi
				if [ "$label" == "io" ]; then name="Disks"; fi
				if [ "$label" == "p0" ]; then name="CPU0/1"; fi
				if [ "$label" == "p1" ]; then name="CPU2/3"; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "volt" ]; then
			echo "graph_title Voltages"
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			grep Volts $ipmioutput |
			while read a; do
				label=`echo $a |grep Volts |awk '{print $1}' |sed -e 's/+//' -e 's/-/dash/' -e 's/\.//'`
				if [ "$label" == "mbv_bat" ]; then name="VBAT"; fi
				if [ "$label" == "mbv_3v3stby" ]; then name='3.3VSTBY'; fi
				if [ "$label" == "mbv_3v3" ]; then name='3.3V'; fi
				if [ "$label" == "mbv_5v" ]; then name='5V'; fi
				if [ "$label" == "mbv_12v" ]; then name='12V'; fi
				if [ "$label" == "mbv_dash12v" ]; then name='dash12V'; fi
				if [ "$label" == "mbv_2v5core" ]; then name='MB 2.5V'; fi
				if [ "$label" == "mbv_1v8core" ]; then name='MB 1.8V'; fi
				if [ "$label" == "mbv_1v2core" ]; then name='MB 1.2V'; fi
				if [ "$label" == "p0v_1v5" ]; then name='CPU0 1.5V'; fi
				if [ "$label" == "p0v_2v5core" ]; then name='CPU0 2.5V'; fi
				if [ "$label" == "p0v_1v25core" ]; then name='CPU0 1.25V'; fi
				if [ "$label" == "p1v_1v5" ]; then name='CPU1 1.5V'; fi
				if [ "$label" == "p1v_2v5core" ]; then name='CPU1 2.5V'; fi
				if [ "$label" == "p1v_1v25core" ]; then name='CPU1 1.25V'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speeds"
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			grep RPM $ipmioutput |
			while read a; do
				label=`echo $a |grep RPM |awk '{print $1}' |cut -d \. -f 1-3 |sed -e 's/\.//g'`
				if [ "$label" == "ft0fm0f0" ]; then name='ft0.fm0.f0'; fi
				if [ "$label" == "ft0fm1f0" ]; then name='ft0.fm1.f0'; fi
				if [ "$label" == "ft0fm2f0" ]; then name='ft0.fm2.f0'; fi
				if [ "$label" == "ft1fm0f0" ]; then name='ft1.fm0.f0'; fi
				if [ "$label" == "ft1fm1f0" ]; then name='ft1.fm1.f0'; fi
				if [ "$label" == "ft1fm2f0" ]; then name='ft1.fm2.f0'; fi
				if [ "$label" == "ft0fm0f1" ]; then name='ft0.fm0.f1'; fi
				if [ "$label" == "ft0fm1f1" ]; then name='ft0.fm1.f1'; fi
				if [ "$label" == "ft0fm2f1" ]; then name='ft0.fm2.f1'; fi
				if [ "$label" == "ft1fm0f1" ]; then name='ft1.fm0.f1'; fi
				if [ "$label" == "ft1fm1f1" ]; then name='ft1.fm1.f1'; fi
				if [ "$label" == "ft1fm2f1" ]; then name='ft1.fm2.f1'; fi
				echo $label.label $name
			done
		fi	
	fi
	
	if [ "$machine" == "v20z" ]; then
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			grep degrees $ipmioutput |
			while read a; do
				label=`echo $a |grep degrees |awk '{print $1}'`;
				if [ "$label" == "ambienttemp" ]; then name='System'; fi
				if [ "$label" == "cpu0.dietemp" ]; then name='CPU0 die'; fi
				if [ "$label" == "cpu0.memtemp" ]; then name='CPU0 mem'; fi
				if [ "$label" == "cpu1.dietemp" ]; then name='CPU1 die'; fi
				if [ "$label" == "cpu1.memtemp" ]; then name='CPU1 mem'; fi
				if [ "$label" == "gbeth.temp" ]; then name='GBNIC'; fi
				if [ "$label" == "hddbp.temp" ]; then name='HDD backplane'; fi
				if [ "$label" == "sp.temp" ]; then name='Service CPU'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "volt" ]; then
			echo "graph_title Voltages"
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			grep Volts $ipmioutput |
			while read a; do
				label=`echo $a |grep Volts |awk '{print $1}'`
				if [ "$label" == "bulk.v12-0-s0" ]; then name="bulk.v12-0-s0"; fi
				if [ "$label" == "bulk.v3_3-s0" ]; then name="bulk.v3_3-s0"; fi
				if [ "$label" == "bulk.v3_3-s5" ]; then name="bulk.v3_3-s5"; fi
				if [ "$label" == "bulk.v5-s0" ]; then name="bulk.v5-s0"; fi
				if [ "$label" == "bulk.v5-s5" ]; then name="bulk.v5-s5"; fi
				if [ "$label" == "cpu0.vcore-s0" ]; then name="cpu0.vcore-s0"; fi
				if [ "$label" == "cpu0.vldt2" ]; then name="cpu0.vldt2"; fi
				if [ "$label" == "cpu1.vcore-s0" ]; then name="cpu1.vcore-s0"; fi
				if [ "$label" == "mb.v_+3v3" ]; then name='3.3V'; fi
				echo $label.label $name
			done
		fi

		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speeds"
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			grep RPM $ipmioutput |
			while read a; do
				label=`echo $a |grep RPM |awk '{print $1}' |cut -d \. -f 1`;
				if [ "$label" == "fan1" ]; then name='Fan 1'; fi
				if [ "$label" == "fan2" ]; then name='Fan 2'; fi
				if [ "$label" == "fan3" ]; then name='Fan 3'; fi
				if [ "$label" == "fan4" ]; then name='Fan 4'; fi
				if [ "$label" == "fan5" ]; then name='Fan 5'; fi
				if [ "$label" == "fan6" ]; then name='Fan 6'; fi
				echo $label.label $name
			done
		fi
	fi
	
	if [ "$machine" == "x2100" ]; then
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			grep degrees $ipmioutput |
			while read a; do
				label=`echo $a |grep degrees |cut -d \| -f 1|sed -e 's/\ //g' |sed -e 's/\(.*\)/\L\1/'`;
				if [ "$label" == "cputemp" ]; then name='CPU'; fi
				if [ "$label" == "systemp" ]; then name='System'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "volt" ]; then
			echo 'graph_title Voltage'
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			grep Volts $ipmioutput |
			while read a; do
				label=`echo $a |grep Volts |cut -d \| -f 1 |sed -e 's/\ //g' -e 's/\(.*\)/\L\1/' -e 's/\.//g'`
				if [ "$label" == "ddr26v" ]; then name='DDR 2.6V'; fi
				if [ "$label" == "cpucorevoltage" ]; then name='CPU core'; fi
				if [ "$label" == "vcc33v" ]; then name='+3.3V'; fi
				if [ "$label" == "vcc5v" ]; then name='+5V'; fi
				if [ "$label" == "vcc12v" ]; then name='+12V'; fi
				if [ "$label" == "batteryvolt" ]; then name='VBAT'; fi
				echo $label.label $name
			done
		fi

		if [ "$sensors" == "fan" ]; then
			echo 'graph_title Fan speed'
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			grep RPM $ipmioutput |
			while read a; do
				label=`echo $a |grep RPM |cut -d \| -f 1 |sed -e 's/\(.*\)/\L\1/' -e s'/\ //g'`
				if [ "$label" == "cpufan" ]; then name='CPU fan'; fi
				if [ "$label" == "systemfan3" ]; then name='Fan 3'; fi
				if [ "$label" == "systemfan2" ]; then name='Fan 2'; fi
				if [ "$label" == "systemfan1" ]; then name='Fan 1'; fi
				echo $label.label $name
			done
		fi
	fi
	
	if [ "$machine" == "x346" ]; then
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			grep Temp $ipmioutput |
			while read a; do
				label=`echo $a| |sed -e 's/^\(.*\)Temp.*$/\L\1/' -e 's/\ //g'`
				if [ "$label" == "ambient" ]; then name='Ambient'; fi
				if [ "$label" == "cpu1" ]; then name='CPU 1'; fi
				if [ "$label" == "cpu2" ]; then name='CPU 2'; fi
				if [ "$label" == "dasd" ]; then name='DASD'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "volt" ]; then
			echo "graph_title Voltage"
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			grep Volts $ipmioutput |
			while read a; do
				label=`echo $a |grep Volts |sed -e 's/^\([^|]*\)|.*$/\L\1/' -e 's/\ //g' -e 's/-/dash/' -e 's/\.//g'`
				if [ "$label" == "125vsense" ]; then name='1.25V'; fi
				if [ "$label" == "13vsense" ]; then name='1.3V'; fi
				if [ "$label" == "15vsense" ]; then name='1.5V'; fi
				if [ "$label" == "18vsense" ]; then name='1.8V'; fi
				if [ "$label" == "25vsense" ]; then name='2.5V'; fi
				if [ "$label" == "12vbsense" ]; then name='12VB'; fi
				if [ "$label" == "12vvsense" ]; then name='12VC'; fi
				if [ "$label" == "5vsense" ]; then name='5V'; fi
				if [ "$label" == "12vasense" ]; then name='12VA'; fi
				if [ "$label" == "dash12vsense" ]; then name='-12V'; fi
				if [ "$label" == "vbat" ]; then name='VBAT'; fi
				if [ "$label" == "cpu1vcore" ]; then name='CPU 0'; fi
				if [ "$label" == "cpu2vcore" ]; then name='CPU 1'; fi
				if [ "$label" == "cpuvtt" ]; then name='CPU Vtt'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speed"
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			grep RPM $ipmioutput |
			while read a; do
				label=`echo $a |grep RPM |sed -e 's/^\(.*\)Tach.*$/\L\1/' -e 's/\ //g'`
				name=`echo $a |grep RPM |sed -e 's/^\(.*\)Tach.*$/\1/'`
				echo $label.label $name
			done
		fi
	fi
	
	if [ "$machine" == "dl385" ]; then
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speed"
			echo "graph_vlabel %"
			echo "graph_category sensors"
			cat $ipmioutput | sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^\([^ ]\)*[ ]*\([^ ]*\).*/\Lfan\1_\2/' -e '/ \|^$/ d' -e 's/\///' -e 's/processor_zone/cpu/' -e 's/powersupply_bay/psu/' |
			while read a; do
				label=$a
				if [ "$label" == "fan1_cpu" ]; then name='Fan 1 CPU'; fi
				if [ "$label" == "fan2_cpu" ]; then name='Fan 2 CPU'; fi
				if [ "$label" == "fan3_io_zone" ]; then name='Fan 3 I/O'; fi
				if [ "$label" == "fan4_io_zone" ]; then name='Fan 4 I/O'; fi
				if [ "$label" == "fan5_cpu" ]; then name='Fan 5 CPU'; fi
				if [ "$label" == "fan6_cpu" ]; then name='Fan 6 CPU'; fi
				if [ "$label" == "fan7_psu" ]; then name='Fan 7 PSU'; fi
				if [ "$label" == "fan8_psu" ]; then name='Fan 8 PSU'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			cat $ipmioutput |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*\([^ ]*\).*/\L\1/' -e '/ \|^$/ d' -e 's/#\|\///' |
			while read a; do
				label=$a
				if [ "$label" == "cpu1" ]; then name='CPU 1'; fi
				if [ "$label" == "io_zone" ]; then name='I/O zone'; fi
				if [ "$label" == "cpu2" ]; then name='CPU 2'; fi
				if [ "$label" == "processor_zone" ]; then name='CPU zone'; fi
				if [ "$label" == "power_supply_bay" ]; then name='PSU'; fi
				echo $label.label $name
			done
		fi
	fi
	
	if [ "$machine" == "asmb2" ]; then
		if [ "$sensors" == "temp" ]; then
			grep degrees $ipmioutput |
			while read a; do
				label=`echo $a |sed -e 's/^\(.*\)|.*deg.*$/\L\1/' -e 's/\ //g'`
				name=`echo $a |sed -e 's/^\(.*\)|.*deg.*$/\1/'`
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "fan" ]; then
			grep RPM $ipmioutput |
			while read a; do
				label=`echo $a |sed -e 's/^\(.*\)|.*RPM.*$/\L\1/' -e 's/\ //g'`
				name=`echo $a |sed -e 's/^\(.*\)|.*RPM.*$/\1/'`
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "volt" ]; then
			grep Volts $ipmioutput |
			while read a; do
				label=`echo $a |sed -e 's/^\(.*\)|.*Volts.*$/\L\1/' -e 's/\///' -e 's/\+//' -e 's/\ //g' -e 's/\.//g'`
				name=`echo $a |sed -e 's/^\(.*\)|.*Volts.*$/\1/' -e 's/System\ //' -e 's/\ or\ /\//'`
				echo $label.label $name
			done
		fi
	fi

	if [ "$machine" == "dl385g2" ]; then
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speed"
			echo "graph_vlabel %"
			echo "graph_category sensors"
			cat $ipmioutput | sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^#\([^ ]*\)*[ ]*\([^ ]*\).*/\Lfan\1_\2/' -e '/ \|^$/ d' -e 's/\///' -e 's/processor_zone/cpu/' |
			while read a; do
				label=$a
				if [ "$label" == "fan1_io_zone" ]; then name='Fan 1 I/O'; fi
				if [ "$label" == "fan2_io_zone" ]; then name='Fan 2 I/O'; fi
				if [ "$label" == "fan3_io_zone" ]; then name='Fan 3 I/O'; fi
				if [ "$label" == "fan4_io_zone" ]; then name='Fan 4 I/O'; fi
				if [ "$label" == "fan5_cpu" ]; then name='Fan 5 CPU'; fi
				if [ "$label" == "fan6_cpu" ]; then name='Fan 6 CPU'; fi
				if [ "$label" == "fan7_cpu" ]; then name='Fan 7 CPU'; fi
				if [ "$label" == "fan8_cpu" ]; then name='Fan 8 CPU'; fi
				if [ "$label" == "fan9_cpu" ]; then name='Fan 9 CPU'; fi
				if [ "$label" == "fan10_cpu" ]; then name='Fan 10 CPU'; fi
				if [ "$label" == "fan11_cpu" ]; then name='Fan 11 CPU'; fi
				if [ "$label" == "fan12_cpu" ]; then name='Fan 12 CPU'; fi
				echo $label.label $name
			done
		fi
		
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			cat $ipmioutput |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*\([^ ]*\).*/\L\1/' -e '/ \|^$/ d' -e 's/#\|\///' |
			while read a; do
				label=$a
				if [ "$label" == "cpu1" ]; then name='CPU 1'; fi
				if [ "$label" == "io_zone" ]; then name='I/O zone'; fi
				if [ "$label" == "cpu2" ]; then name='CPU 2'; fi
				if [ "$label" == "processor_zone" ]; then name='CPU zone'; fi
				if [ "$label" == "power_supply_bay" ]; then name='PSU'; fi
				echo $label.label $name
			done
		fi
	fi
			
	if [ "$machine" == "shg2" ]; then
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speed"
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			cat $ipmioutput |
			while read a; do
				label=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e '/[|]/ d' -e 's/\ //g'`
				name=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\1/' -e '/[|]/ d'`
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi
		
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel C"
			echo "graph_category sensors"
			cat $ipmioutput |
			while read a; do
				label=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e 's/\ //g' -e 's/temp//' -e '/[|]/d'`
				name=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\1/'  -e 's/Temp//' -e '/[|]/d'`
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi

		if [ "$sensors" == "volt" ]; then
			echo "graph_title Voltage"
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			cat $ipmioutput |
			while read a; do
				label=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\L\1/' -e 's/baseboard //' -e 's/[-]/dash/' -e 's/[.]/_/' -e 's/battery voltage/bat/' -e 's/processor vrm/vrm/' -e '/[|]/d' -e 's/\ //g'`
				name=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\1/' -e 's/Baseboard //' -e 's/[.]/_/' -e 's/ Voltage//' -e 's/Processor //' -e '/[|]/d' -e 's/\ //g'`
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi

	fi

	if [ "$machine" == "0k0710" ]; then
		if [ "$sensors" == "fan" ]; then
			echo "graph_title Fan speed"
			echo "graph_vlabel RPM"
			echo "graph_category sensors"
			cat $ipmioutput |
			while read a; do
				label=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e '/[|]/ d' -e 's/[/ ]//g'`
				name=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\1/' -e '/[|]/ d'`
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi
		
		if [ "$sensors" == "temp" ]; then
			echo "graph_title Temperature"
			echo "graph_vlabel Degrees C"
			echo "graph_category sensors"
			num=0
			cat $ipmioutput |
			while read a; do
				(( num++ ))
				label=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e 's/[/ ]//g' -e 's/temp//' -e '/[|]/d'`
				name=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\1/'  -e 's/Temp//' -e '/[|]/d'`
				istemp=`echo "$a" | grep -Fio temp`
				if [ -n "$istemp" ] && [ -z "$label" ]; then
					label="temp_$num"
					name="Temp $num"
				fi
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi

		if [ "$sensors" == "volt" ]; then
			echo "graph_title Voltage"
			echo "graph_vlabel Volts"
			echo "graph_category sensors"
			cat $ipmioutput |
			while read a; do
				label=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\L\1/' -e 's/baseboard //' -e 's/[-]/dash/' -e 's/[.]/_/' -e 's/battery voltage/bat/' -e 's/processor vrm/vrm/' -e '/[|]/d' -e 's/[/ ]//g'`
				name=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\1/' -e 's/Baseboard //' -e 's/[.]/_/' -e 's/ Voltage//' -e 's/Processor //' -e '/[|]/d' -e 's/\ //g'`
				if [ "$label" != "" ]; then
					echo $label.label $name
				fi
			done
		fi

	fi
	exit 0
fi


# printing values

if [ "$machine" == "x4x00" ]; then
	if [ "$sensors" == "temp" ]; then
		grep degree $ipmioutput |
		while read a; do
			label=`echo $a |grep degree |cut -d \. -f 1`
			value=`echo $a |grep deg |awk '{print $3}'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "volt" ]; then
		grep Volts $ipmioutput |
		while read a; do
			label=`echo $a |grep Volts |awk '{print $1}' |sed -e 's/+//' -e 's/-/dash/' -e 's/\.//'`
			value=`echo $a |grep Volts  |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "fan" ]; then
		grep RPM $ipmioutput |
		while read a; do
			label=`echo $a |grep RPM |awk '{print $1}' |cut -d \. -f 1-3 |sed -e 's/\.//g'`
			value=`echo $a |grep RPM |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
fi

if [ "$machine" == "v20z" ]; then
	if [ "$sensors" == "temp" ]; then
		grep degrees $ipmioutput |
		while read a; do
			label=`echo $a |grep degrees |awk '{print $1}'`
			value=`echo $a |grep degrees |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi

	if [ "$sensors" == "volt" ]; then
		grep Volts $ipmioutput |
		while read a; do
			label=`echo $a |grep Volts |awk '{print $1}'`
			value=`echo $a |grep Volts |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "fan" ]; then
		grep RPM $ipmioutput |
		while read a; do
			label=`echo $a |grep RPM |awk '{print $1}' |cut -d \. -f 1`
			value=`echo $a |grep RPM |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
fi

if [ "$machine" == "x2100" ]; then
	if [ "$sensors" == "temp" ]; then
		grep degrees $ipmioutput |
		while read a; do
			label=`echo $a |grep degrees |cut -d \| -f 1|sed -e 's/\ //g' |sed -e 's/\(.*\)/\L\1/'`
			value=`echo $a |grep degrees |cut -d \| -f 2 | awk '{print $1}'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "volt" ]; then
		grep Volts $ipmioutput |
		while read a; do
			label=`echo $a |grep Volts |cut -d \| -f 1 |sed -e 's/\ //g' -e 's/\(.*\)/\L\1/' -e 's/\.//g'`
			value=`echo $a |grep Volts |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi

	if [ "$sensors" == "fan" ]; then
		grep RPM $ipmioutput |
		while read a; do
			label=`echo $a |grep RPM |cut -d \| -f 1 |sed -e 's/\(.*\)/\L\1/' -e s'/\ //g'`
			value=`echo $a |grep RPM |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
fi

if [ "$machine" == "x346" ]; then
	if [ "$sensors" == "temp" ]; then
		grep degrees $ipmioutput |
		while read a; do
			label=`echo $a |grep Temp |sed -e 's/^\(.*\)Temp.*$/\L\1/' -e 's/\ //g'`
			value=`echo $a |grep degrees |cut -d \| -f 2 | awk '{print $1}'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "volt" ]; then
		grep Volts $ipmioutput |
		while read a; do
			label=`echo $a |grep Volts |sed -e 's/^\([^|]*\)|.*$/\L\1/' -e 's/\ //g' -e 's/\.//' -e 's/-/dash/'`
			value=`echo $a |grep Volts |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi

	if [ "$sensors" == "fan" ]; then
		grep RPM $ipmioutput |
		while read a; do
			label=`echo $a |grep RPM |sed -e 's/^\(.*\)Tach.*$/\L\1/' -e 's/\ //g'`
			value=`echo $a |grep RPM |cut -d \| -f 2 |awk '{print $1}'`
			echo $label.value $value
		done
	fi
	
fi

if [ "$machine" == "dl385" ]; then
	if [ "$sensors" == "fan" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^\([^ ]\)*[ ]*\([^ ]*\).*/\Lfan\1_\2/' -e '/ \|^$/ d' -e 's/\///' -e 's/processor_zone/cpu/' -e 's/powersupply_bay/psu/'`
			value=`echo $a |sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^[^ ]*[ ]*[^ ]*[ ]*[^ ]*[ ]*[^ ]*[ ]*\([^ ]*\)%.*/\1/' -e '/ \|^$/ d'`
			# gany szar
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "temp" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*\([^ ]*\).*/\L\1/' -e '/ \|^$/ d' -e 's/#\|\///'`
			value=`echo $a |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*[^ ]*[ ]*\([^ ]*\)[C].*/\1/' -e '/ \|^$/ d'`	
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi
fi

if [ "$machine" == "asmb2" ]; then
	if [ "$sensors" == "fan" ]; then
		grep RPM $ipmioutput |
		while read a; do
			label=`echo $a |sed -e 's/^\(.*\)|.*RPM.*$/\L\1/' -e 's/\ //g'`
			value=`echo $a |sed -e 's/.*|\(.*\)RPM.*|.*/\1/' -e 's/\ //g'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "temp" ]; then
		grep deg $ipmioutput |
		while read a; do
			label=`echo $a |sed -e 's/^\(.*\)|.*deg.*$/\L\1/' -e 's/\ //g'`
			value=`echo $a |sed -e 's/.*|\(.*\)deg.*|.*/\1/' -e 's/\ //g'`
			echo $label.value $value
		done
	fi
	
	if [ "$sensors" == "volt" ]; then
		grep Volts $ipmioutput |
		while read a; do
			label=`echo $a |sed -e 's/^\(.*\)|.*Volts.*$/\L\1/' -e 's/\///' -e 's/\+//' -e 's/\ //g' -e 's/\.//g'`
			value=`echo $a |sed -e 's/.*|\(.*\)Volts.*|.*/\1/' -e 's/\ //g'`
			echo $label.value $value
		done
	fi
fi

if [ "$machine" == "dl385g2" ]; then
	if [ "$sensors" == "fan" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^#\([^ ]*\)*[ ]*\([^ ]*\).*/\Lfan\1_\2/' -e '/ \|^$/ d' -e 's/\///' -e 's/processor_zone/cpu/'`
			value=`echo $a |sed -e '/[^ ]*[ ]*[^ ]*[ ]Yes.*/ s/^[^ ]*[ ]*[^ ]*[ ]*[^ ]*[ ]*[^ ]*[ ]*\([^ ]*\)%.*/\1/' -e '/ \|^$/ d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "temp" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*\([^ ]*\).*/\L\1/' -e '/ \|^$/ d' -e 's/#\|\///'`
			value=`echo $a |sed -e '/[^ ]*[^ ]C\/[^ ]*F[ ]*[^ ]*C\/[^ ]*F/ s/^[^ ]*[ ]*[^ ]*[ ]*\([^ ]*\)[C].*/\1/' -e '/ \|^$/ d'`	
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi
fi

if [ "$machine" == "shg2" ]; then
	if [ "$sensors" == "fan" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e '/[|]/ d' -e 's/\ //g'`
			value=`echo $a |sed -e '/.*RPM.*ok.*/ s/.*|[ ]\(.*\)[ ]RPM.*/\1/' -e '/[|]/d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "temp" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e 's/\ //g' -e 's/temp//' -e '/[|]/d'`
			value=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/.*|[ ]\(.*\)[ ]deg.*|.*/\L\1/' -e '/[|]/d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "volt" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\L\1/' -e 's/baseboard //' -e 's/[.]/_/' -e 's/[-]/dash/' -e 's/battery voltage/bat/' -e 's/processor vrm/vrm/' -e '/[|]/d' -e 's/\ //g'`
			value=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/.*|[ ]\(.*\)[ ]Volts.*|.*/\1/' -e '/[|]/d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

fi

if [ "$machine" == "0k0710" ]; then
	if [ "$sensors" == "fan" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/.*RPM.*ok.*/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e '/[|]/ d' -e 's/[/ ]//g'`
			value=`echo $a |sed -e '/.*RPM.*ok.*/ s/.*|[ ]\(.*\)[ ]RPM.*/\1/' -e '/[|]/d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "temp" ]; then
		num=0
		cat $ipmioutput |
		while read a; do
			(( num++ ))
			label=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/\(.*\)[ ]*|.*|.*/\L\1/' -e 's/[/ ]//g' -e 's/temp//' -e '/[|]/d'`
			value=`echo $a |sed -e '/.*Temp.*|.*degrees.*|.*ok/ s/.*|[ ]\(.*\)[ ]deg.*|.*/\L\1/' -e '/[|]/d' -e 's/-//g'`
			istemp=`echo "$a" | grep -Fio temp`
			if [ -n "$istemp" ] && [ -z "$label" ]; then
				label="temp_$num"
			fi
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

	if [ "$sensors" == "volt" ]; then
		cat $ipmioutput |
		while read a; do
			label=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/\(.*\).*|.*|.*/\L\1/' -e 's/baseboard //' -e 's/[.]/_/' -e 's/[-]/dash/' -e 's/battery voltage/bat/' -e 's/processor vrm/vrm/' -e '/[|]/d' -e 's/[/ ]//g'`
			value=`echo $a |sed -e '/.*|.*Volts.*|.*/ s/.*|[ ]\(.*\)[ ]Volts.*|.*/\1/' -e '/[|]/d'`
			if [ "$label" != "" ]; then
				echo $label.value $value
			fi
		done
	fi

fi
